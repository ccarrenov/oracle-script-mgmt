/
SET SERVEROUTPUT ON
DECLARE
    CURSOR ACTIVE_SESSION IS 
    SELECT S.SID || ',' || S.SERIAL# as SID
    FROM V$SESSION S, V$PROCESS P
    WHERE S.PADDR = P.ADDR AND S.USERNAME = '&1';

    FILA_VAR ACTIVE_SESSION%ROWTYPE;

    LOG_INFO VARCHAR(255);
BEGIN

    
    DBMS_OUTPUT.PUT_LINE(RPAD(LPAD('LOCKED ACCOUNT', 50, '#'), 75, '#'));

    LOG_INFO := 'alter user ' || '&1' || ' account lock';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;

    LOG_INFO := RPAD(LPAD(' SCRIPT FIND SESSEION ACTIVE ', 50, '#'), 75, '#');
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    
    DBMS_OUTPUT.PUT_LINE(RPAD(LPAD('KILL SESION', 40, '#'), 75, '#'));
    LOG_INFO := RPAD('SID', 25, ' ');
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);

    FOR FILA_VAR IN ACTIVE_SESSION
    LOOP
        LOG_INFO := RPAD(FILA_VAR.SID, 25, ' ');
        DBMS_OUTPUT.PUT_LINE(LOG_INFO);
        LOG_INFO := 'alter system kill session ''' || FILA_VAR.SID || '''';
        DBMS_OUTPUT.PUT_LINE(LOG_INFO);
        EXECUTE IMMEDIATE LOG_INFO;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE(RPAD(LPAD('DROP USER', 50, '#'), 75, '#'));

    LOG_INFO := 'drop user ' || '&1' || ' cascade';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('[[[OK]]]');
EXCEPTION
WHEN OTHERS THEN

    DBMS_OUTPUT.PUT_LINE('[[[NOK]]]');
    DBMS_OUTPUT.PUT_LINE('ERROR CODE: ' || SQLCODE || ' DETAIL: ' || SQLERRM);
    DBMS_OUTPUT.PUT_LINE('BACKTRACE: ' || DBMS_UTILITY.format_error_backtrace);
END;
/
EXIT;
