/
SET SERVEROUTPUT ON
DECLARE

    LOG_INFO VARCHAR(255);
BEGIN

    
    DBMS_OUTPUT.PUT_LINE(RPAD(LPAD('CREATE USER', 50, '#'), 75, '#'));
    LOG_INFO := 'GRANT CONNECT, RESOURCE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT ALTER any index TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT ALTER any SEQUENCE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT ALTER any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT ALTER any TRIGGER TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any index TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any SEQUENCE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any SYNONYM TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any TRIGGER TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any VIEW TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any PROCEDURE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE PUBLIC SYNONYM TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any TRIGGER TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT CREATE any VIEW TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DELETE any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DROP any index TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DROP any SEQUENCE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DROP any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DROP any TRIGGER TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT DROP any VIEW TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT INSERT any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT QUERY REWRITE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT SELECT any TABLE TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT create JOB TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT create JOB TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT create EXTERNAL JOB TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT execute any PROGRAM TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT execute any CLASS TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'GRANT MANAGE SCHEDULER TO &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'grant debug connect session to &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'grant debug any procedure to &1';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    LOG_INFO := 'alter user &1 quota unlimited on &2';
    DBMS_OUTPUT.PUT_LINE(LOG_INFO);
    EXECUTE IMMEDIATE LOG_INFO;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('[[[OK]]]');

EXCEPTION
WHEN OTHERS THEN

    DBMS_OUTPUT.PUT_LINE('[[[NOK]]]');
    DBMS_OUTPUT.PUT_LINE('ERROR CODE: ' || SQLCODE || ' DETAIL: ' || SQLERRM);
    DBMS_OUTPUT.PUT_LINE('BACKTRACE: ' || DBMS_UTILITY.format_error_backtrace);
END;
/
EXIT;
